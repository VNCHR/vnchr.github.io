{"version":3,"sources":["vnchrlogo.png","drip2.jpg","config.js","App.js","reportWebVitals.js","index.js"],"names":["config","deadline","Date","formattedStr","address","redeemUrl","App","useState","tweetForm","setTweetForm","useForm","registerTweet","register","handleSubmitTweet","handleSubmit","padding","bg","w","color","p","columns","src","Logo","height","fontSize","as","now","spacing","leftIcon","colorScheme","onClick","window","open","size","toString","Drip","isOpen","onClose","onSubmit","data","rawString","encodedURI","encodeURI","id","name","ref","pattern","placeholder","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d928337.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vnchrlogo.c048411c.png\";","export default __webpack_public_path__ + \"static/media/drip2.c7a9528e.jpg\";","let config = {};\n\nconfig.deadline = new Date(1608076800000);\nconfig.formattedStr = (address) => {\n    return `VNCHR is Awesome!!! (pssst send it to ${address} ) https://twitter.com/dripvnchr/status/1313128520864989185`\n};\nconfig.redeemUrl = 'https://forms.gle/TJJp1LuW5SkRtrVi9';\n\nexport default config;","import Logo from './vnchrlogo.png';\nimport Drip from './drip2.jpg';\nimport './App.css';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { FaTwitter,FaDiscord,FaInstagramSquare,FaMoneyBillWave } from 'react-icons/fa';\nimport config from './config.js';\nimport React, { useState } from 'react';\nimport { Input, FormControl, FormLabel, FormHelperText, Modal, ModalOverlay, ModalContent, Image, Button, SimpleGrid, Text, Heading, ChakraProvider, Box} from \"@chakra-ui/react\";\n\nfunction App() {\n\n  const [tweetForm,setTweetForm] = useState(false);\n  const { register:registerTweet, handleSubmit:handleSubmitTweet } = useForm();\n\n  const generateTweet = (data) => {\n    const rawString = config.formattedStr(data.address);\n    const encodedURI = encodeURI(rawString);\n    window.open(`https://www.twitter.com/intent/tweet?text=${encodedURI}`,'_blank');\n  }\n\n  return (\n    <ChakraProvider>\n      <Box padding=\"0px\" bg=\"white\" w=\"100%\" color=\"black\" p={4}>\n        <SimpleGrid columns={[1, null, 2]}>\n        <Box padding=\"50px\">\n          <Image src={Logo} height='72px'/><br/>\n            <Text fontSize=\"5xl\" as=\"mark\">Earn $VNCHR by helping us get clout!!</Text>\n            <br></br><br></br>\n            {(config.deadline > Date.now())?<div>\n            <SimpleGrid columns={2} spacing={10}>\n            <Button leftIcon={<FaTwitter/>} colorScheme=\"blue\" onClick={()=>setTweetForm(true)}> Step 1 : Tweet It !</Button>\n            <Button leftIcon={<FaMoneyBillWave/>} colorScheme=\"green\" onClick={()=>{window.open(config.redeemUrl,'_blank')}}>Redeem $VNCHR !</Button>\n            </SimpleGrid>\n            <br></br>\n            <Heading size=\"xl\">How?? ðŸ¤”</Heading><br></br>\n            <Text fontSize=\"xl\">Tweet \"Today's Tweet\" as your own & redeem before the deadline</Text>\n            <Text fontSize=\"2xl\" as=\"strong\"> => GET 100 $VNCHR ðŸ¤‘ðŸ¤‘</Text><br/><br/>\n            <Text fontSize=\"lg\">(There's no token sale, this is the only way to get them!)</Text>\n            <Text fontSize=\"md\" as=\"strong\"> The deadline for this round is {config.deadline.toString()}</Text></div> : null}\n            {(config.deadline < Date.now())?<div>\n              <Text fontSize=\"4xl\" as=\"strong\">Follow us on twitter to find out about our next campaign!</Text>\n              <br/><br/><Button leftIcon={<FaTwitter/>} colorScheme=\"blue\" onClick={() => {window.open('https://www.twitter.com/dripvnchr','_blank')}}> Twitter </Button>\n            </div>:null}\n          </Box> \n          <Box padding=\"50px\">\n          <Image src={Drip} height='150px'/>\n          <br/>\n          <Text fontSize=\"4xl\" as=\"mark\">We're creating a community powered streetwear store!!</Text>\n          <Text fontSize=\"2xl\">Use our token $VNCHR, to vote on what we drop, pay for goods, & for a chance to \"cut in line\" for future drops</Text>\n          <Text fontSize=\"3xl\" as=\"mark\">Community Curated Weekly Drops ðŸ’¯</Text>\n          <br></br><br></br>\n          <SimpleGrid columns={3} spacing={10}>\n          <Button leftIcon={<FaDiscord/>} colorScheme=\"purple\" onClick={() => {window.open('https://discord.gg/rPJK8dGjd5', '_blank')}}> Discord </Button>\n          <Button leftIcon={<FaTwitter/>} colorScheme=\"blue\" onClick={() => {window.open('https://www.twitter.com/dripvnchr','_blank')}}> Twitter </Button>\n          <Button leftIcon={<FaInstagramSquare/>} colorScheme=\"red\" onClick={() => {window.open('https://www.instagram.com/dripvnchr','_blank')}}> Instagram </Button>\n          </SimpleGrid> \n          </Box>\n        </SimpleGrid>\n      </Box>\n\n      <Modal isOpen={tweetForm} onClose={()=>setTweetForm(false)}>\n        <ModalOverlay />\n        <ModalContent padding=\"50px\">\n        <Heading>Generate Faucet Tweet</Heading>\n          <br/>\n          <Text fontSize=\"md\" as=\"strong\" color=\"red.500\">YOU NEED MORE THAN 25 FOLLOWERS TO BE ELIGIBLE</Text>\n          <br/>\n          <Text >Enter the address you want the $VNCHR to go and we'll generate what you need to tweet</Text>\n          <br/>\n        <form onSubmit={handleSubmitTweet(generateTweet)}>\n        <FormControl id=\"address\">\n          <Text fontSize=\"xl\">Your Ethereum / xDai Address</Text>\n          <Input name=\"address\" ref={registerTweet({pattern: /^0x[a-fA-F0-9]{40}$/})} placeholder=\"Enter Your Account Address\" size=\"lg\"/>\n          <FormHelperText>NOTE : Your address will be on the faucet tweet, please consider operational security!</FormHelperText>\n          <FormHelperText>NOTE : This address must be an key based account (EOA) and not a contract wallet</FormHelperText>\n        </FormControl>\n        <br/>\n        <Text fontSize=\"md\" as=\"strong\" color=\"red.500\">YOU CAN ONLY REDEEM ONCE PER CAMPAIGN TWEET</Text><br/>\n        <Text fontSize=\"sm\" as=\"strong\">Remember to redeem before {config.deadline.toString()}</Text>\n        <br/><br/>\n        <Button leftIcon={<FaTwitter/>} colorScheme=\"blue\" type=\"submit\"> TWEET IT !!!</Button>\n        </form>\n        </ModalContent>\n      </Modal>\n\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}